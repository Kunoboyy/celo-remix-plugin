{"version":3,"sources":["components/Method.tsx","components/Compiler.tsx","components/SmartContracts.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Method","props","React","useState","inputs","setInputs","abi","setArgs","useEffect","Form","className","items","map","item","index","Fragment","Text","name","Control","type","size","placeholder","onChange","event","target","value","JSON","parse","toString","Group","DrawInputs","getFunctions","temp","forEach","element","push","getArguments","args","Compiler","celo","network","gtag","busy","setBusy","addNewContract","setSelected","updateBalance","initialised","setInitialised","client","setClient","fileName","setFileName","iconSpin","setIconSpin","data","contracts","setContracts","contractName","setContractName","constructor","setConstructor","address","setAddress","error","setError","compile","a","solidity","select","newContracts","element0","element1","isConnected","newContract","kit","web3","eth","Contract","stringify","getAccounts","accounts","parms","rawTx","from","deploy","evm","bytecode","object","arguments","encodeABI","sendTransaction","txReceipt","contractAddress","console","Contracts","split","length","Object","keys","key","Button","variant","disabled","onClick","copy","InputGroup","as","e","createClient","onload","on","fn","source","languageVersion","fileManager","getCurrentFile","log","init","block","style","marginRight","Card","Header","Body","Alert","onClose","dismissible","hidden","readOnly","Append","EMPTYLIST","DrawMethod","success","setSuccess","setValue","buttonVariant","stateMutability","value2","Prepend","methods","call","message","to","ContractCard","contract","remove","enable","setEnable","CSSTransition","in","timeout","classNames","unmountOnExit","onExited","substring","window","open","getNetwork","blockscout","id","Accordion","Toggle","eventKey","Collapse","DrawMathods","SmartContracts","count","setCount","DrawContracts","App","account","setAccount","balance","setBalance","setNetwork","disabledNetSelect","setDisabledNetSelect","Celo","NETWORKS","Mainnet","atAddress","setAtAddress","selected","getSupport","connectCelo","networkName","method","connectMetaMask","getTotalBalance","CELO","utils","fromWei","changeNetwork","concat","Networks","list","Container","OverlayTrigger","placement","overlay","Tooltip","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e9e8b8f7.chunk.js","sourcesContent":["import React from 'react';\nimport { Form } from 'react-bootstrap';\nimport { AbiInput, AbiItem } from 'web3-utils';\n\ninterface InterfaceProps {\n\tabi: AbiItem | null;\n\tsetArgs: (name: string, value: string) => void;\n}\n\nconst Method: React.FunctionComponent<InterfaceProps> = (props) => {\n\tconst [inputs, setInputs] = React.useState<AbiInput[]>([]);\n\tconst { abi, setArgs } = props;\n\n\tReact.useEffect(() => {\n\t\tsetInputs(abi && abi.inputs ? abi.inputs : []);\n\t}, [abi]);\n\n\tfunction DrawInputs() {\n\t\tconst items = inputs.map((item: AbiInput, index: number) => (\n\t\t\t<React.Fragment key={index.toString()}>\n\t\t\t\t<Form.Text className=\"text-muted\">\n\t\t\t\t\t<small>{item.name}</small>\n\t\t\t\t</Form.Text>\n\t\t\t\t<Form.Control\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\tname={item.name}\n\t\t\t\t\tplaceholder={item.type}\n\t\t\t\t\tonChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n\t\t\t\t\t\tif (event.target.value[0] === '[') {\n\t\t\t\t\t\t\tsetArgs(event.target.name, JSON.parse(event.target.value));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsetArgs(event.target.name, event.target.value);\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</React.Fragment>\n\t\t));\n\t\treturn <Form.Group>{items}</Form.Group>;\n\t}\n\n\treturn <Form className=\"Method\">{DrawInputs()}</Form>;\n};\n\nexport default Method;\n","import React from 'react';\nimport { Alert, Button, Card, Form, InputGroup } from 'react-bootstrap';\nimport copy from 'copy-to-clipboard';\nimport { AbiInput, AbiItem } from 'web3-utils';\nimport type { Api } from '@remixproject/plugin-utils';\nimport { Client } from '@remixproject/plugin';\nimport { IRemixApi } from '@remixproject/plugin-api';\nimport { createClient } from '@remixproject/plugin-iframe';\nimport { Celo } from '@dexfair/celo-web-signer';\nimport { InterfaceContract } from './Types';\nimport Method from './Method';\n\nfunction getFunctions(abi: AbiItem[]): AbiItem[] {\n\tconst temp: AbiItem[] = [];\n\tabi.forEach((element: AbiItem) => {\n\t\tif (element.type === 'function') {\n\t\t\ttemp.push(element);\n\t\t}\n\t});\n\treturn temp;\n}\n\nfunction getArguments(abi: AbiItem | null, args: { [key: string]: string }) {\n\tconst temp: string[] = [];\n\tif (abi) {\n\t\tabi.inputs?.forEach((item: AbiInput) => {\n\t\t\ttemp.push(args[item.name]);\n\t\t});\n\t}\n\treturn temp;\n}\n\ninterface InterfaceProps {\n\tcelo: Celo;\n\tnetwork: string;\n\tgtag: (name: string) => void;\n\tbusy: boolean;\n\tsetBusy: (state: boolean) => void;\n\taddNewContract: (contract: InterfaceContract) => void; // for SmartContracts\n\tsetSelected: (select: InterfaceContract) => void; // for At Address\n\tupdateBalance: (address: string) => void;\n}\n\nconst Compiler: React.FunctionComponent<InterfaceProps> = ({\n\tcelo,\n\tnetwork,\n\tgtag,\n\tbusy,\n\tsetBusy,\n\taddNewContract,\n\tsetSelected,\n\tupdateBalance,\n}) => {\n\tconst [initialised, setInitialised] = React.useState<boolean>(false);\n\tconst [client, setClient] = React.useState<Client<Api, Readonly<IRemixApi>> | undefined | null>(null);\n\tconst [fileName, setFileName] = React.useState<string>('');\n\tconst [iconSpin, setIconSpin] = React.useState<string>('');\n\tconst [contracts, setContracts] = React.useState<{ fileName: string; data: { [key: string]: any } }>({\n\t\tfileName: '',\n\t\tdata: {},\n\t});\n\tconst [contractName, setContractName] = React.useState<string>('');\n\tconst [constructor, setConstructor] = React.useState<AbiItem | null>(null);\n\tconst [args, setArgs] = React.useState<{ [key: string]: string }>({});\n\tconst [address, setAddress] = React.useState<string>('');\n\tconst [error, setError] = React.useState<string>('');\n\n\tReact.useEffect(() => {\n\t\tasync function init() {\n\t\t\tsetInitialised(true);\n\t\t\tconst temp = createClient();\n\t\t\tawait temp.onload();\n\t\t\ttemp.solidity.on('compilationFinished', (fn: string, source: any, languageVersion: string, data: any) => {\n\t\t\t\t// console.log(fn, source, languageVersion, data);\n\t\t\t\tsetContracts({ fileName: fn, data: data.contracts[fn] });\n\t\t\t\t// eslint-disable-next-line\n\t\t\t\tselect(\n\t\t\t\t\tObject.keys(data.contracts[fn]).length > 0 ? Object.keys(data.contracts[fn])[0] : '',\n\t\t\t\t\tdata.contracts[fn]\n\t\t\t\t);\n\t\t\t});\n\t\t\ttemp.on('fileManager', 'currentFileChanged', (fn: string) => {\n\t\t\t\tsetFileName(fn);\n\t\t\t});\n\t\t\ttry {\n\t\t\t\tsetFileName(await temp.fileManager.getCurrentFile());\n\t\t\t} catch (e) {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.log('Error from IDE : No such file or directory No file selected');\n\t\t\t}\n\t\t\tsetClient(temp);\n\t\t}\n\t\tsetAddress('');\n\t\tif (!initialised) {\n\t\t\t// setCompilerConfig(version, optimize);\n\t\t\tinit();\n\t\t}\n\t\t// eslint-disable-next-line\n  }, [network]);\n\n\tasync function compile() {\n\t\tsetBusy(true);\n\t\tsetIconSpin('fa-spin');\n\t\tawait client?.solidity.compile(fileName);\n\t\tsetIconSpin('');\n\t\tsetBusy(false);\n\t}\n\n\tfunction select(name: string, newContracts: { [key: string]: any } | null = null) {\n\t\tconst abi = newContracts ? newContracts[name].abi : contracts.data[name].abi;\n\t\tsetContractName(name);\n\t\tsetConstructor(null);\n\t\tsetArgs({});\n\t\tabi.forEach((element0: AbiItem) => {\n\t\t\tif (element0.type === 'constructor') {\n\t\t\t\tconst temp: { [key: string]: string } = {};\n\t\t\t\telement0.inputs?.forEach((element1: AbiInput) => {\n\t\t\t\t\ttemp[element1.name] = '';\n\t\t\t\t});\n\t\t\t\tsetArgs(temp);\n\t\t\t\tsetConstructor(element0);\n\t\t\t}\n\t\t});\n\t\tsetSelected({ name, address: '', abi: getFunctions(abi) });\n\t}\n\n\tasync function onDeploy() {\n\t\tif (!busy && celo.isConnected) {\n\t\t\tgtag('deploy');\n\t\t\tsetBusy(true);\n\t\t\tsetAddress('');\n\t\t\ttry {\n\t\t\t\tconst newContract = new celo.kit.web3.eth.Contract(\n\t\t\t\t\tJSON.parse(JSON.stringify(contracts.data[contractName].abi))\n\t\t\t\t);\n\t\t\t\tconst accounts = await celo.getAccounts();\n\t\t\t\tconst parms: string[] = getArguments(constructor, args);\n\t\t\t\tconst rawTx = {\n\t\t\t\t\tfrom: accounts[0],\n\t\t\t\t\tdata: newContract\n\t\t\t\t\t\t.deploy({ data: `0x${contracts.data[contractName].evm.bytecode.object}`, arguments: parms })\n\t\t\t\t\t\t.encodeABI(),\n\t\t\t\t};\n\t\t\t\t// console.log(rawTx)\n\t\t\t\tconst txReceipt = await celo.sendTransaction(rawTx);\n\t\t\t\t// console.log(txReceipt);\n\t\t\t\tif (txReceipt.contractAddress) {\n\t\t\t\t\tsetAddress(txReceipt.contractAddress);\n\t\t\t\t\taddNewContract({\n\t\t\t\t\t\tname: contractName,\n\t\t\t\t\t\taddress: txReceipt.contractAddress,\n\t\t\t\t\t\tabi: getFunctions(contracts.data[contractName].abi),\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tsetError('contractAddress error');\n\t\t\t\t}\n\t\t\t\tupdateBalance(accounts[0]);\n\t\t\t} catch (e) {\n\t\t\t\t// eslint-disable-next-line\n        console.error(e)\n\t\t\t\tsetError('deploy error');\n\t\t\t}\n\t\t\tsetBusy(false);\n\t\t}\n\t}\n\n\tfunction Contracts() {\n\t\tconst { data } = contracts;\n\t\tconst value = contracts.fileName.split('/')[contracts.fileName.split('/').length - 1];\n\t\tconst items = Object.keys(data).map((key) => <option key={key} value={key}>{`${key} - ${value}`}</option>);\n\t\treturn (\n\t\t\t<Form>\n\t\t\t\t<Form.Group>\n\t\t\t\t\t<Form.Text className=\"text-muted\">\n\t\t\t\t\t\t<small>CONTRACT</small>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant=\"link\"\n\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\tclassName=\"mt-0 pt-0 float-right\"\n\t\t\t\t\t\t\tdisabled={!contracts.data[contractName]}\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tif (contracts.data[contractName]) {\n\t\t\t\t\t\t\t\t\tcopy(JSON.stringify(contracts.data[contractName].abi, null, 4));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<i className=\"far fa-copy\" />\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Form.Text>\n\t\t\t\t\t<InputGroup>\n\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\tas=\"select\"\n\t\t\t\t\t\t\tvalue={contractName}\n\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\tselect(e.target.value);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{items}\n\t\t\t\t\t\t</Form.Control>\n\t\t\t\t\t</InputGroup>\n\t\t\t\t</Form.Group>\n\t\t\t</Form>\n\t\t);\n\t}\n\n\treturn (\n\t\t<div className=\"Compiler\">\n\t\t\t<Button\n\t\t\t\tvariant=\"primary\"\n\t\t\t\tonClick={async () => {\n\t\t\t\t\tawait compile();\n\t\t\t\t}}\n\t\t\t\tblock\n\t\t\t\tdisabled={fileName === '' || iconSpin !== ''}\n\t\t\t>\n\t\t\t\t<i className={`fas fa-sync ${iconSpin}`} style={{ marginRight: '0.3em' }} />\n\t\t\t\t<span>\n\t\t\t\t\tCompile&nbsp;\n\t\t\t\t\t{`${fileName === '' ? '<no file selected>' : fileName.split('/')[fileName.split('/').length - 1]}`}\n\t\t\t\t</span>\n\t\t\t</Button>\n\t\t\t<hr />\n\t\t\t<Contracts />\n\t\t\t<Card>\n\t\t\t\t<Card.Header className=\"p-2\">Deploy</Card.Header>\n\t\t\t\t<Card.Body className=\"py-1 px-2\">\n\t\t\t\t\t<Method\n\t\t\t\t\t\tabi={constructor}\n\t\t\t\t\t\tsetArgs={(name: string, value: string) => {\n\t\t\t\t\t\t\targs[name] = value;\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<Alert variant=\"danger\" onClose={() => setError('')} dismissible hidden={error === ''}>\n\t\t\t\t\t\t<small>{error}</small>\n\t\t\t\t\t</Alert>\n\t\t\t\t\t<InputGroup className=\"mb-3\">\n\t\t\t\t\t\t<Form.Control value={address} placeholder=\"contract address\" size=\"sm\" readOnly />\n\t\t\t\t\t\t<InputGroup.Append>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant=\"warning\"\n\t\t\t\t\t\t\t\tblock\n\t\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\t\tdisabled={busy || !(celo && celo.isConnected) || fileName === ''}\n\t\t\t\t\t\t\t\tonClick={onDeploy}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<small>Deploy</small>\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</InputGroup.Append>\n\t\t\t\t\t</InputGroup>\n\t\t\t\t</Card.Body>\n\t\t\t</Card>\n\t\t</div>\n\t);\n};\n\nexport default Compiler;\n","import React from 'react';\nimport { Alert, Accordion, Button, Card, Form, InputGroup } from 'react-bootstrap';\nimport copy from 'copy-to-clipboard';\nimport { CSSTransition } from 'react-transition-group';\nimport { AbiInput, AbiItem } from 'web3-utils';\nimport { Celo } from '@dexfair/celo-web-signer';\nimport { InterfaceContract } from './Types';\nimport Method from './Method';\nimport './animation.css';\n\nconst EMPTYLIST = 'Currently you have no contract instances to interact with.';\n\ninterface InterfaceDrawMethodProps {\n\tcelo: Celo;\n\tbusy: boolean;\n\tsetBusy: (state: boolean) => void;\n\tabi: AbiItem;\n\taddress: string;\n\tupdateBalance: (address: string) => void;\n}\n\nconst DrawMethod: React.FunctionComponent<InterfaceDrawMethodProps> = (props) => {\n\tconst [error, setError] = React.useState<string>('');\n\tconst [success, setSuccess] = React.useState<string>('');\n\tconst [value, setValue] = React.useState<string>('');\n\tconst [args, setArgs] = React.useState<{ [key: string]: string }>({});\n\tconst { celo, busy, /* setBusy, */ abi, address, updateBalance } = props;\n\n\tReact.useEffect(() => {\n\t\tconst temp: { [key: string]: string } = {};\n\t\tabi.inputs?.forEach((element: AbiInput) => {\n\t\t\ttemp[element.name] = '';\n\t\t});\n\t\tsetArgs(temp);\n\t}, [abi.inputs]);\n\n\tfunction buttonVariant(stateMutability: string | undefined): string {\n\t\tswitch (stateMutability) {\n\t\t\tcase 'view':\n\t\t\tcase 'pure':\n\t\t\t\treturn 'primary';\n\t\t\tcase 'nonpayable':\n\t\t\t\treturn 'warning';\n\t\t\tcase 'payable':\n\t\t\t\treturn 'danger';\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\treturn '';\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Method\n\t\t\t\tabi={abi}\n\t\t\t\tsetArgs={(name: string, value2: string) => {\n\t\t\t\t\targs[name] = value2;\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<Alert variant=\"danger\" onClose={() => setError('')} dismissible hidden={error === ''}>\n\t\t\t\t<small>{error}</small>\n\t\t\t</Alert>\n\t\t\t<Alert variant=\"success\" onClose={() => setSuccess('')} dismissible hidden={success === ''}>\n\t\t\t\t<small>{success}</small>\n\t\t\t</Alert>\n\t\t\t<InputGroup className=\"mb-3\">\n\t\t\t\t<InputGroup.Prepend>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant={buttonVariant(abi.stateMutability)}\n\t\t\t\t\t\tblock\n\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\tdisabled={busy || !(celo && celo.isConnected)}\n\t\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\t\t// setBusy(true)\n\t\t\t\t\t\t\tconst parms: string[] = [];\n\t\t\t\t\t\t\tabi.inputs?.forEach((item: AbiInput) => {\n\t\t\t\t\t\t\t\tparms.push(args[item.name]);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tconst newContract = new celo.kit.web3.eth.Contract(JSON.parse(JSON.stringify([abi])), address);\n\t\t\t\t\t\t\tconst accounts = await celo.getAccounts();\n\t\t\t\t\t\t\tif (abi.stateMutability === 'view' || abi.stateMutability === 'pure') {\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tconst txReceipt = abi.name\n\t\t\t\t\t\t\t\t\t\t? await newContract.methods[abi.name](...parms).call({ from: accounts[0] })\n\t\t\t\t\t\t\t\t\t\t: null;\n\t\t\t\t\t\t\t\t\tif (typeof txReceipt === 'object') {\n\t\t\t\t\t\t\t\t\t\tsetSuccess(JSON.stringify(txReceipt, null, 4));\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tsetValue(txReceipt);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t// TODO: LOG\n\t\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\t\t// console.error(error)\n\t\t\t\t\t\t\t\t\tsetError(e.message ? e.message : e.toString());\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tconst txReceipt = abi.name\n\t\t\t\t\t\t\t\t\t\t? await celo.sendTransaction({\n\t\t\t\t\t\t\t\t\t\t\t\tfrom: accounts[0],\n\t\t\t\t\t\t\t\t\t\t\t\tto: address,\n\t\t\t\t\t\t\t\t\t\t\t\tdata: newContract.methods[abi.name](...parms).encodeABI(),\n\t\t\t\t\t\t\t\t\t\t  })\n\t\t\t\t\t\t\t\t\t\t: null;\n\t\t\t\t\t\t\t\t\t// console.log(txReceipt)\n\t\t\t\t\t\t\t\t\tsetError('');\n\t\t\t\t\t\t\t\t\tsetSuccess(JSON.stringify(txReceipt, null, 2));\n\t\t\t\t\t\t\t\t\tupdateBalance(accounts[0]);\n\t\t\t\t\t\t\t\t\t// TODO: LOG\n\t\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\t\t// console.error(error)\n\t\t\t\t\t\t\t\t\tsetError(e.message ? e.message : e.toString());\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// setBusy(false)\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<small>{abi.stateMutability === 'view' || abi.stateMutability === 'pure' ? 'call' : 'transact'}</small>\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant={buttonVariant(abi.stateMutability)}\n\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\tclassName=\"mt-0 pt-0 float-right\"\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tif (abi.name) {\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tconst parms: string[] = [];\n\t\t\t\t\t\t\t\t\tabi.inputs?.forEach((item: AbiInput) => {\n\t\t\t\t\t\t\t\t\t\tif (args[item.name]) {\n\t\t\t\t\t\t\t\t\t\t\tparms.push(args[item.name]);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tconst newContract = new celo.kit.web3.eth.Contract(JSON.parse(JSON.stringify([abi])), address);\n\t\t\t\t\t\t\t\t\tcopy(newContract.methods[abi.name](...parms).encodeABI());\n\t\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\t\tconsole.log(e.toString());\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<i className=\"far fa-copy\" />\n\t\t\t\t\t</Button>\n\t\t\t\t</InputGroup.Prepend>\n\t\t\t\t<Form.Control\n\t\t\t\t\tvalue={value}\n\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\treadOnly\n\t\t\t\t\thidden={!(abi.stateMutability === 'view' || abi.stateMutability === 'pure')}\n\t\t\t\t/>\n\t\t\t</InputGroup>\n\t\t</>\n\t);\n};\n\nconst ContractCard: React.FunctionComponent<{\n\tcelo: Celo;\n\tbusy: boolean;\n\tsetBusy: (state: boolean) => void;\n\tcontract: InterfaceContract;\n\tindex: number;\n\tremove: () => void;\n\tupdateBalance: (address: string) => void;\n}> = ({ celo, busy, setBusy, contract, index, remove, updateBalance }) => {\n\tconst [enable, setEnable] = React.useState<boolean>(true);\n\n\tfunction DrawMathods() {\n\t\tconst list = contract.abi ? contract.abi : [];\n\t\tconst items = list.map((abi: AbiItem, id: number) => (\n\t\t\t<Accordion key={`Methods_A_${index.toString()}`}>\n\t\t\t\t<Card>\n\t\t\t\t\t<Accordion.Toggle as={Card.Header} eventKey={`Methods_${id}`} className=\"p-1\">\n\t\t\t\t\t\t<small>{abi.name}</small>\n\t\t\t\t\t</Accordion.Toggle>\n\t\t\t\t\t<Accordion.Collapse eventKey={`Methods_${id}`}>\n\t\t\t\t\t\t<Card.Body className=\"py-1 px-2\">\n\t\t\t\t\t\t\t<DrawMethod\n\t\t\t\t\t\t\t\tcelo={celo}\n\t\t\t\t\t\t\t\tbusy={busy}\n\t\t\t\t\t\t\t\tsetBusy={setBusy}\n\t\t\t\t\t\t\t\tabi={abi}\n\t\t\t\t\t\t\t\taddress={contract.address}\n\t\t\t\t\t\t\t\tupdateBalance={updateBalance}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t</Accordion.Collapse>\n\t\t\t\t</Card>\n\t\t\t</Accordion>\n\t\t));\n\t\treturn <>{items}</>;\n\t}\n\n\treturn (\n\t\t<CSSTransition in={enable} timeout={300} classNames=\"zoom\" unmountOnExit onExited={remove}>\n\t\t\t<Card className=\"mb-2\">\n\t\t\t\t<Card.Header className=\"px-2 py-1\">\n\t\t\t\t\t<strong className=\"align-middle\">{contract.name}</strong>\n\t\t\t\t\t&nbsp;\n\t\t\t\t\t<small className=\"align-middle\">{`${contract.address.substring(0, 6)}...${contract.address.substring(\n\t\t\t\t\t\t38\n\t\t\t\t\t)}`}</small>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName=\"float-right align-middle\"\n\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\tvariant=\"link\"\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\twindow.open(`${celo.getNetwork().blockscout}/address/${contract.address}`);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<i className=\"fas fa-external-link-alt\" />\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName=\"float-right align-middle\"\n\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\tvariant=\"link\"\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tsetEnable(false);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<i className=\"fas fa-trash-alt\" />\n\t\t\t\t\t</Button>\n\t\t\t\t</Card.Header>\n\t\t\t\t{DrawMathods()}\n\t\t\t</Card>\n\t\t</CSSTransition>\n\t);\n};\n\ninterface InterfaceSmartContractsProps {\n\tcelo: Celo;\n\tbusy: boolean;\n\tsetBusy: (state: boolean) => void;\n\tcontracts: InterfaceContract[];\n\tupdateBalance: (address: string) => void;\n}\n\nconst SmartContracts: React.FunctionComponent<InterfaceSmartContractsProps> = ({ celo, busy, setBusy, contracts, updateBalance }) => {\n\tconst [error, setError] = React.useState<string>('');\n\tconst [count, setCount] = React.useState<number>(0);\n\n\tReact.useEffect(() => {\n\t\tsetCount(0);\n\t\tsetError(EMPTYLIST);\n\t}, [contracts, busy]);\n\n\tfunction DrawContracts() {\n\t\tconst items = contracts.map((data: InterfaceContract, index: number) => (\n\t\t\t<ContractCard\n\t\t\t\tcelo={celo}\n\t\t\t\tbusy={busy}\n\t\t\t\tsetBusy={setBusy}\n\t\t\t\tcontract={data}\n\t\t\t\tindex={index}\n\t\t\t\tremove={() => {\n\t\t\t\t\tsetCount(count + 1);\n\t\t\t\t\tsetError(EMPTYLIST);\n\t\t\t\t}}\n\t\t\t\tupdateBalance={updateBalance}\n\t\t\t\tkey={`Contract_${index.toString()}`}\n\t\t\t/>\n\t\t));\n\t\treturn <>{items}</>;\n\t}\n\n\treturn (\n\t\t<div className=\"SmartContracts\">\n\t\t\t<Alert variant=\"warning\" className=\"text-center\" hidden={contracts.length !== count}>\n\t\t\t\t<small>{error}</small>\n\t\t\t</Alert>\n\t\t\t{DrawContracts()}\n\t\t</div>\n\t);\n};\n\nexport default SmartContracts;\n","import React from 'react';\nimport { Container, Form, InputGroup, Tooltip, Button, OverlayTrigger } from 'react-bootstrap';\nimport { Celo, NETWORKS } from '@dexfair/celo-web-signer';\nimport Compiler from './components/Compiler';\nimport SmartContracts from './components/SmartContracts';\nimport { InterfaceContract } from './components/Types';\n\nconst App: React.FunctionComponent = () => {\n\tconst [account, setAccount] = React.useState<string>('');\n\tconst [balance, setBalance] = React.useState<string>('');\n\tconst [network, setNetwork] = React.useState<string>('Mainnet');\n\tconst [disabledNetSelect, setDisabledNetSelect] = React.useState<boolean>(true);\n\tconst [busy, setBusy] = React.useState<boolean>(false);\n\tconst [celo] = React.useState<Celo>(new Celo(NETWORKS.Mainnet));\n\tconst [atAddress, setAtAddress] = React.useState<string>('');\n\tconst [contracts, setContracts] = React.useState<InterfaceContract[]>([]);\n\tconst [selected, setSelected] = React.useState<InterfaceContract | null>(null);\n\n\tReact.useEffect(() => {\n\t\tupdateBalance(account);\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [account, network]);\n\n\tasync function connect() {\n\t\tif (!celo.isConnected) {\n\t\t\tsetBusy(true);\n\t\t\tconst support = await celo.getSupport();\n\n\t\t\tif (support.celo) {\n\t\t\t\tconst result = await celo.connectCelo(\n\t\t\t\t\t(type: string, accounts: string[]) => {\n\t\t\t\t\t\tsetBalance('');\n\t\t\t\t\t\tsetAccount(accounts[0]);\n\t\t\t\t\t},\n\t\t\t\t\t(networkName: string) => {\n\t\t\t\t\t\tsetBalance('');\n\t\t\t\t\t\tsetNetwork(networkName);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tif (result && (window as { [key: string]: any }).gtag) {\n\t\t\t\t\tconst { gtag } = window as { [key: string]: any };\n\t\t\t\t\tgtag('event', 'login', {\n\t\t\t\t\t\tmethod: 'Celo',\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst result = await celo.connectMetaMask((type: string, accounts: string[]) => {\n\t\t\t\t\tsetAccount(accounts[0]);\n\t\t\t\t});\n\t\t\t\tif (result && (window as { [key: string]: any }).gtag) {\n\t\t\t\t\tconst { gtag } = window as { [key: string]: any };\n\t\t\t\t\tgtag('event', 'login', {\n\t\t\t\t\t\tmethod: 'MetaMask',\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tsetDisabledNetSelect(false);\n\t\t\t}\n\n\t\t\tsetBusy(false);\n\t\t}\n\t}\n\n\tasync function updateBalance(address: string) {\n\t\tif (address !== '') {\n\t\t\tconst { CELO } = await celo.kit.getTotalBalance(address);\n\t\t\tsetBalance(celo.kit.web3.utils.fromWei(CELO.toString()));\n\t\t}\n\t}\n\n\tasync function changeNetwork(e: React.ChangeEvent<HTMLInputElement>) {\n\t\tif (!disabledNetSelect) {\n\t\t\tsetBusy(true);\n\t\t\tsetContracts([]);\n\t\t\tconst temp = e.target.value;\n\t\t\tawait celo.changeNetwork(NETWORKS[temp]);\n\t\t\tsetNetwork(temp);\n\t\t\tsetBusy(false);\n\t\t}\n\t}\n\n\tfunction addNewContract(contract: InterfaceContract) {\n\t\tsetContracts(contracts.concat([contract]));\n\t}\n\n\tfunction Networks() {\n\t\tconst list = NETWORKS;\n\t\tconst items = Object.keys(list).map((key) => (\n\t\t\t<option key={key} value={key}>\n\t\t\t\t{key}\n\t\t\t</option>\n\t\t));\n\t\treturn (\n\t\t\t<Form.Group>\n\t\t\t\t<Form.Text className=\"text-muted\">\n\t\t\t\t\t<small>NETWORK</small>\n\t\t\t\t</Form.Text>\n\t\t\t\t<Form.Control\n\t\t\t\t\tas=\"select\"\n\t\t\t\t\tvalue={network}\n\t\t\t\t\tonChange={changeNetwork}\n\t\t\t\t\tdisabled={!celo.isConnected || disabledNetSelect}\n\t\t\t\t>\n\t\t\t\t\t{items}\n\t\t\t\t</Form.Control>\n\t\t\t</Form.Group>\n\t\t);\n\t}\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Container>\n\t\t\t\t<Form>\n\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t<Form.Text className=\"text-muted\">\n\t\t\t\t\t\t\t<small>ACCOUNT</small>\n\t\t\t\t\t\t</Form.Text>\n\t\t\t\t\t\t<InputGroup>\n\t\t\t\t\t\t\t<Form.Control type=\"text\" placeholder=\"Account\" value={account} size=\"sm\" readOnly />\n\t\t\t\t\t\t\t<InputGroup.Append hidden={account !== ''}>\n\t\t\t\t\t\t\t\t<OverlayTrigger\n\t\t\t\t\t\t\t\t\tplacement=\"left\"\n\t\t\t\t\t\t\t\t\toverlay={\n\t\t\t\t\t\t\t\t\t\t<Tooltip id=\"overlay-connect\" hidden={account !== ''}>\n\t\t\t\t\t\t\t\t\t\t\tConnect to Wallet\n\t\t\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Button variant=\"warning\" block size=\"sm\" disabled={busy} onClick={connect}>\n\t\t\t\t\t\t\t\t\t\t<small>Connect</small>\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</OverlayTrigger>\n\t\t\t\t\t\t\t</InputGroup.Append>\n\t\t\t\t\t\t</InputGroup>\n\t\t\t\t\t</Form.Group>\n\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t<Form.Text className=\"text-muted\">\n\t\t\t\t\t\t\t<small>BALANCE (CELO)</small>\n\t\t\t\t\t\t</Form.Text>\n\t\t\t\t\t\t<InputGroup>\n\t\t\t\t\t\t\t<Form.Control type=\"text\" placeholder=\"Account\" value={balance} size=\"sm\" readOnly />\n\t\t\t\t\t\t</InputGroup>\n\t\t\t\t\t</Form.Group>\n\t\t\t\t\t<Networks />\n\t\t\t\t</Form>\n\t\t\t\t<hr />\n\t\t\t\t<Compiler\n\t\t\t\t\tcelo={celo}\n\t\t\t\t\tnetwork={network}\n\t\t\t\t\tgtag={(name: string) => {\n\t\t\t\t\t\tconst { gtag } = window as { [key: string]: any };\n\t\t\t\t\t\tgtag('event', name, { network });\n\t\t\t\t\t}}\n\t\t\t\t\tbusy={busy}\n\t\t\t\t\tsetBusy={setBusy}\n\t\t\t\t\taddNewContract={addNewContract}\n\t\t\t\t\tsetSelected={setSelected}\n\t\t\t\t\tupdateBalance={updateBalance}\n\t\t\t\t/>\n\t\t\t\t<p className=\"text-center mt-3\">\n\t\t\t\t\t<small>OR</small>\n\t\t\t\t</p>\n\t\t\t\t<InputGroup className=\"mb-3\">\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\tvalue={atAddress}\n\t\t\t\t\t\tplaceholder=\"contract address\"\n\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\tsetAtAddress(e.target.value);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\tdisabled={busy || account === '' || !selected}\n\t\t\t\t\t/>\n\t\t\t\t\t<InputGroup.Append>\n\t\t\t\t\t\t<OverlayTrigger\n\t\t\t\t\t\t\tplacement=\"left\"\n\t\t\t\t\t\t\toverlay={<Tooltip id=\"overlay-ataddresss\">Use deployed Contract address</Tooltip>}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\t\tdisabled={busy || account === '' || !selected}\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tsetBusy(true);\n\t\t\t\t\t\t\t\t\tif (selected) {\n\t\t\t\t\t\t\t\t\t\taddNewContract({ ...selected, address: atAddress });\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tsetBusy(false);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<small>At Address</small>\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</OverlayTrigger>\n\t\t\t\t\t</InputGroup.Append>\n\t\t\t\t</InputGroup>\n\t\t\t\t<hr />\n\t\t\t\t<SmartContracts celo={celo} busy={busy} setBusy={setBusy} contracts={contracts} updateBalance={updateBalance} />\n\t\t\t</Container>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}