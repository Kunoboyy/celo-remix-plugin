{"version":3,"sources":["components/Method.tsx","components/Compiler.tsx","components/SmartContracts.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Method","props","React","useState","inputs","setInputs","abi","setArgs","useEffect","Form","className","items","map","item","index","Fragment","Text","name","Control","type","size","placeholder","onChange","event","target","value","toString","Group","DrawInputs","getFunctions","temp","forEach","element","push","getArguments","args","Compiler","client","setClient","fileName","setFileName","iconSpin","setIconSpin","data","contracts","setContracts","contractName","setContractName","constructor","setConstructor","address","setAddress","error","setError","celo","gtag","busy","setBusy","addNewContract","setSelected","updateBalance","compile","a","solidity","select","newContracts","element0","element1","isConnected","newContract","kit","web3","eth","Contract","JSON","parse","stringify","getAccounts","accounts","parms","rawTx","from","deploy","evm","bytecode","object","arguments","encodeABI","sendTransaction","txReceipt","contractAddress","console","message","Contracts","split","length","Object","keys","key","Button","variant","disabled","onClick","copy","InputGroup","as","e","createClient","onload","on","fn","source","languageVersion","fileManager","getCurrentFile","log","init","block","style","marginRight","Card","Header","Body","Alert","onClose","dismissible","hidden","readOnly","Append","EMPTYLIST","DrawMethod","success","setSuccess","setValue","buttonVariant","stateMutability","value2","Prepend","methods","call","send","ContractCard","enable","setEnable","blockscout","contract","remove","CSSTransition","in","timeout","classNames","unmountOnExit","onExited","substring","window","open","id","Accordion","Toggle","eventKey","Collapse","DrawMathods","SmartContracts","count","setCount","DrawContracts","App","account","setAccount","balance","setBalance","network","setNetwork","setBlockscout","Celo","NETWORKS","Mainnet","atAddress","setAtAddress","selected","connectMetaMask","method","getTotalBalance","CELO","utils","fromWei","changeNetwork","concat","Networks","list","Container","OverlayTrigger","placement","overlay","Tooltip","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0c495316.chunk.js","sourcesContent":["import React from 'react';\nimport { Form } from 'react-bootstrap';\nimport { AbiInput, AbiItem } from 'web3-utils';\n\ninterface InterfaceProps {\n\tabi: AbiItem | null;\n\tsetArgs: (name: string, value: string) => void;\n}\n\nconst Method: React.FunctionComponent<InterfaceProps> = (props) => {\n\tconst [inputs, setInputs] = React.useState<AbiInput[]>([]);\n\tconst { abi, setArgs } = props;\n\n\tReact.useEffect(() => {\n\t\tsetInputs(abi && abi.inputs ? abi.inputs : []);\n\t}, [abi]);\n\n\tfunction DrawInputs() {\n\t\tconst items = inputs.map((item: AbiInput, index: number) => (\n\t\t\t<React.Fragment key={index.toString()}>\n\t\t\t\t<Form.Text className=\"text-muted\">\n\t\t\t\t\t<small>{item.name}</small>\n\t\t\t\t</Form.Text>\n\t\t\t\t<Form.Control\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\tname={item.name}\n\t\t\t\t\tplaceholder={item.type}\n\t\t\t\t\tonChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n\t\t\t\t\t\tsetArgs(event.target.name, event.target.value);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</React.Fragment>\n\t\t));\n\t\treturn <Form.Group>{items}</Form.Group>;\n\t}\n\n\treturn <Form className=\"Method\">{DrawInputs()}</Form>;\n};\n\nexport default Method;\n","import React from 'react';\nimport { Alert, Button, Card, Form, InputGroup } from 'react-bootstrap';\nimport copy from 'copy-to-clipboard';\nimport { AbiInput, AbiItem } from 'web3-utils';\nimport type { Api } from '@remixproject/plugin-utils';\nimport { Client } from '@remixproject/plugin';\nimport { IRemixApi } from '@remixproject/plugin-api';\nimport { createClient } from '@remixproject/plugin-iframe';\nimport { Celo } from '@dexfair/celo-web-signer';\nimport { InterfaceContract } from './Types';\nimport Method from './Method';\n\nfunction getFunctions(abi: AbiItem[]): AbiItem[] {\n\tconst temp: AbiItem[] = [];\n\tabi.forEach((element: AbiItem) => {\n\t\tif (element.type === 'function') {\n\t\t\ttemp.push(element);\n\t\t}\n\t});\n\treturn temp;\n}\n\nfunction getArguments(abi: AbiItem | null, args: { [key: string]: string }) {\n\tconst temp: string[] = [];\n\tif (abi) {\n\t\tabi.inputs?.forEach((item: AbiInput) => {\n\t\t\ttemp.push(args[item.name]);\n\t\t});\n\t}\n\treturn temp;\n}\n\ninterface InterfaceProps {\n\tcelo: Celo;\n\tgtag: (name: string) => void;\n\tbusy: boolean;\n\tsetBusy: (state: boolean) => void;\n\taddNewContract: (contract: InterfaceContract) => void; // for SmartContracts\n\tsetSelected: (select: InterfaceContract) => void; // for At Address\n\tupdateBalance: (address: string) => void;\n}\n\nconst Compiler: React.FunctionComponent<InterfaceProps> = (props) => {\n\tconst [client, setClient] = React.useState<Client<Api, Readonly<IRemixApi>> | undefined | null>(null);\n\tconst [fileName, setFileName] = React.useState<string>('');\n\tconst [iconSpin, setIconSpin] = React.useState<string>('');\n\tconst [contracts, setContracts] = React.useState<{ fileName: string; data: { [key: string]: any } }>({\n\t\tfileName: '',\n\t\tdata: {},\n\t});\n\tconst [contractName, setContractName] = React.useState<string>('');\n\tconst [constructor, setConstructor] = React.useState<AbiItem | null>(null);\n\tconst [args, setArgs] = React.useState<{ [key: string]: string }>({});\n\tconst [address, setAddress] = React.useState<string>('');\n\tconst [error, setError] = React.useState<string>('');\n\n\tconst { celo, gtag, busy, setBusy, addNewContract, setSelected, updateBalance } = props;\n\n\tReact.useEffect(() => {\n\t\tasync function init() {\n\t\t\tconst temp = createClient();\n\t\t\tawait temp.onload();\n\t\t\ttemp.solidity.on('compilationFinished', (fn: string, source: any, languageVersion: string, data: any) => {\n\t\t\t\t// console.log(fn, source, languageVersion, data);\n\t\t\t\tsetContracts({ fileName: fn, data: data.contracts[fn] });\n\t\t\t\t// eslint-disable-next-line\n\t\t\t\tselect(\n\t\t\t\t\tObject.keys(data.contracts[fn]).length > 0 ? Object.keys(data.contracts[fn])[0] : '',\n\t\t\t\t\tdata.contracts[fn]\n\t\t\t\t);\n\t\t\t});\n\t\t\ttemp.on('fileManager', 'currentFileChanged', (fn: string) => {\n\t\t\t\tsetFileName(fn);\n\t\t\t});\n\t\t\ttry {\n\t\t\t\tsetFileName(await temp.fileManager.getCurrentFile());\n\t\t\t} catch (e) {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.log('Error from IDE : No such file or directory No file selected');\n\t\t\t}\n\t\t\tsetClient(temp);\n\t\t}\n\t\tinit();\n\t\t// eslint-disable-next-line\n  }, []);\n\n\tasync function compile() {\n\t\tsetBusy(true);\n\t\tsetIconSpin('fa-spin');\n\t\tawait client?.solidity.compile(fileName);\n\t\tsetIconSpin('');\n\t\tsetBusy(false);\n\t}\n\n\tfunction select(name: string, newContracts: { [key: string]: any } | null = null) {\n\t\tconst abi = newContracts ? newContracts[name].abi : contracts.data[name].abi;\n\t\tsetContractName(name);\n\t\tsetConstructor(null);\n\t\tsetArgs({});\n\t\tabi.forEach((element0: AbiItem) => {\n\t\t\tif (element0.type === 'constructor') {\n\t\t\t\tconst temp: { [key: string]: string } = {};\n\t\t\t\telement0.inputs?.forEach((element1: AbiInput) => {\n\t\t\t\t\ttemp[element1.name] = '';\n\t\t\t\t});\n\t\t\t\tsetArgs(temp);\n\t\t\t\tsetConstructor(element0);\n\t\t\t}\n\t\t});\n\t\tsetSelected({ name, address: '', abi: getFunctions(abi) });\n\t}\n\n\tasync function onDeploy() {\n\t\tif (!busy && celo.isConnected) {\n\t\t\tgtag('deploy');\n\t\t\tsetBusy(true);\n\t\t\tsetAddress('');\n\t\t\ttry {\n\t\t\t\tconst newContract = new celo.kit.web3.eth.Contract(\n\t\t\t\t\tJSON.parse(JSON.stringify(contracts.data[contractName].abi))\n\t\t\t\t);\n\t\t\t\tconst accounts = await celo.getAccounts();\n\t\t\t\tconst parms: string[] = getArguments(constructor, args);\n\t\t\t\tconst rawTx = {\n\t\t\t\t\tfrom: accounts[0],\n\t\t\t\t\tdata: newContract\n\t\t\t\t\t\t.deploy({ data: `0x${contracts.data[contractName].evm.bytecode.object}`, arguments: parms })\n\t\t\t\t\t\t.encodeABI(),\n\t\t\t\t};\n\t\t\t\t// console.log(rawTx)\n\t\t\t\tconst txReceipt = await celo.sendTransaction(rawTx);\n\t\t\t\t// console.log(txReceipt)\n\t\t\t\tif (txReceipt.contractAddress) {\n\t\t\t\t\tsetAddress(txReceipt.contractAddress);\n\t\t\t\t\taddNewContract({\n\t\t\t\t\t\tname: contractName,\n\t\t\t\t\t\taddress: txReceipt.contractAddress,\n\t\t\t\t\t\tabi: getFunctions(contracts.data[contractName].abi),\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tupdateBalance(accounts[0]);\n\t\t\t} catch (e) {\n\t\t\t\t// eslint-disable-next-line\n        console.error(e)\n\t\t\t\tsetError(e.message ? e.message : e.toString());\n\t\t\t}\n\t\t\tsetBusy(false);\n\t\t}\n\t}\n\n\tfunction Contracts() {\n\t\tconst { data } = contracts;\n\t\tconst value = contracts.fileName.split('/')[contracts.fileName.split('/').length - 1];\n\t\tconst items = Object.keys(data).map((key) => <option key={key} value={key}>{`${key} - ${value}`}</option>);\n\t\treturn (\n\t\t\t<Form>\n\t\t\t\t<Form.Group>\n\t\t\t\t\t<Form.Text className=\"text-muted\">\n\t\t\t\t\t\t<small>CONTRACT</small>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant=\"link\"\n\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\tclassName=\"mt-0 pt-0 float-right\"\n\t\t\t\t\t\t\tdisabled={!contracts.data[contractName]}\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tif (contracts.data[contractName]) {\n\t\t\t\t\t\t\t\t\tcopy(JSON.stringify(contracts.data[contractName].abi, null, 4));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<i className=\"far fa-copy\" />\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Form.Text>\n\t\t\t\t\t<InputGroup>\n\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\tas=\"select\"\n\t\t\t\t\t\t\tvalue={contractName}\n\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\tselect(e.target.value);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{items}\n\t\t\t\t\t\t</Form.Control>\n\t\t\t\t\t</InputGroup>\n\t\t\t\t</Form.Group>\n\t\t\t</Form>\n\t\t);\n\t}\n\n\treturn (\n\t\t<div className=\"Compiler\">\n\t\t\t<Button\n\t\t\t\tvariant=\"primary\"\n\t\t\t\tonClick={async () => {\n\t\t\t\t\tawait compile();\n\t\t\t\t}}\n\t\t\t\tblock\n\t\t\t\tdisabled={fileName === '' || iconSpin !== ''}\n\t\t\t>\n\t\t\t\t<i className={`fas fa-sync ${iconSpin}`} style={{ marginRight: '0.3em' }} />\n\t\t\t\t<span>\n\t\t\t\t\tCompile&nbsp;\n\t\t\t\t\t{`${fileName === '' ? '<no file selected>' : fileName.split('/')[fileName.split('/').length - 1]}`}\n\t\t\t\t</span>\n\t\t\t</Button>\n\t\t\t<hr />\n\t\t\t<Contracts />\n\t\t\t<Card>\n\t\t\t\t<Card.Header className=\"p-2\">Deploy</Card.Header>\n\t\t\t\t<Card.Body className=\"py-1 px-2\">\n\t\t\t\t\t<Method\n\t\t\t\t\t\tabi={constructor}\n\t\t\t\t\t\tsetArgs={(name: string, value: string) => {\n\t\t\t\t\t\t\targs[name] = value;\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<Alert variant=\"danger\" onClose={() => setError('')} dismissible hidden={error === ''}>\n\t\t\t\t\t\t<small>{error}</small>\n\t\t\t\t\t</Alert>\n\t\t\t\t\t<InputGroup className=\"mb-3\">\n\t\t\t\t\t\t<Form.Control value={address} placeholder=\"contract address\" size=\"sm\" readOnly />\n\t\t\t\t\t\t<InputGroup.Append>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant=\"warning\"\n\t\t\t\t\t\t\t\tblock\n\t\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\t\tdisabled={busy || !(celo && celo.isConnected) || fileName === ''}\n\t\t\t\t\t\t\t\tonClick={onDeploy}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<small>Deploy</small>\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</InputGroup.Append>\n\t\t\t\t\t</InputGroup>\n\t\t\t\t</Card.Body>\n\t\t\t</Card>\n\t\t</div>\n\t);\n};\n\nexport default Compiler;\n","import React from 'react';\nimport { Alert, Accordion, Button, Card, Form, InputGroup } from 'react-bootstrap';\nimport copy from 'copy-to-clipboard';\nimport { CSSTransition } from 'react-transition-group';\nimport { AbiInput, AbiItem } from 'web3-utils';\nimport { Celo } from '@dexfair/celo-web-signer';\nimport { InterfaceContract } from './Types';\nimport Method from './Method';\nimport './animation.css';\n\nconst EMPTYLIST = 'Currently you have no contract instances to interact with.';\n\ninterface InterfaceDrawMethodProps {\n\tcelo: Celo;\n\tbusy: boolean;\n\tsetBusy: (state: boolean) => void;\n\tabi: AbiItem;\n\taddress: string;\n\tupdateBalance: (address: string) => void;\n}\n\nconst DrawMethod: React.FunctionComponent<InterfaceDrawMethodProps> = (props) => {\n\tconst [error, setError] = React.useState<string>('');\n\tconst [success, setSuccess] = React.useState<string>('');\n\tconst [value, setValue] = React.useState<string>('');\n\tconst [args, setArgs] = React.useState<{ [key: string]: string }>({});\n\tconst { celo, busy, /* setBusy, */ abi, address, updateBalance } = props;\n\n\tReact.useEffect(() => {\n\t\tconst temp: { [key: string]: string } = {};\n\t\tabi.inputs?.forEach((element: AbiInput) => {\n\t\t\ttemp[element.name] = '';\n\t\t});\n\t\tsetArgs(temp);\n\t}, [abi.inputs]);\n\n\tfunction buttonVariant(stateMutability: string | undefined): string {\n\t\tswitch (stateMutability) {\n\t\t\tcase 'view':\n\t\t\tcase 'pure':\n\t\t\t\treturn 'primary';\n\t\t\tcase 'nonpayable':\n\t\t\t\treturn 'warning';\n\t\t\tcase 'payable':\n\t\t\t\treturn 'danger';\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\treturn '';\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Method\n\t\t\t\tabi={abi}\n\t\t\t\tsetArgs={(name: string, value2: string) => {\n\t\t\t\t\targs[name] = value2;\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<Alert variant=\"danger\" onClose={() => setError('')} dismissible hidden={error === ''}>\n\t\t\t\t<small>{error}</small>\n\t\t\t</Alert>\n\t\t\t<Alert variant=\"success\" onClose={() => setSuccess('')} dismissible hidden={success === ''}>\n\t\t\t\t<small>{success}</small>\n\t\t\t</Alert>\n\t\t\t<InputGroup className=\"mb-3\">\n\t\t\t\t<InputGroup.Prepend>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant={buttonVariant(abi.stateMutability)}\n\t\t\t\t\t\tblock\n\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\tdisabled={busy || !(celo && celo.isConnected)}\n\t\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\t\t// setBusy(true)\n\t\t\t\t\t\t\tconst parms: string[] = [];\n\t\t\t\t\t\t\tabi.inputs?.forEach((item: AbiInput) => {\n\t\t\t\t\t\t\t\tparms.push(args[item.name]);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tconst newContract = new celo.kit.web3.eth.Contract(JSON.parse(JSON.stringify([abi])), address);\n\t\t\t\t\t\t\tconst accounts = await celo.getAccounts();\n\t\t\t\t\t\t\tif (abi.stateMutability === 'view' || abi.stateMutability === 'pure') {\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tconst txReceipt = abi.name\n\t\t\t\t\t\t\t\t\t\t? await newContract.methods[abi.name](...parms).call({ from: accounts[0] })\n\t\t\t\t\t\t\t\t\t\t: null;\n\t\t\t\t\t\t\t\t\tsetValue(txReceipt);\n\t\t\t\t\t\t\t\t\t// TODO: LOG\n\t\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\t\t// console.error(error)\n\t\t\t\t\t\t\t\t\tsetError(e.toString());\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tconst txReceipt = abi.name\n\t\t\t\t\t\t\t\t\t\t? await newContract.methods[abi.name](...parms).send({ from: accounts[0] })\n\t\t\t\t\t\t\t\t\t\t: null;\n\t\t\t\t\t\t\t\t\t// console.log(txReceipt)\n\t\t\t\t\t\t\t\t\tsetError('');\n\t\t\t\t\t\t\t\t\tsetSuccess(JSON.stringify(txReceipt, null, 2));\n\t\t\t\t\t\t\t\t\tupdateBalance(accounts[0]);\n\t\t\t\t\t\t\t\t\t// TODO: LOG\n\t\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\t\t// console.error(error)\n\t\t\t\t\t\t\t\t\tsetError(e.toString());\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// setBusy(false)\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<small>{abi.stateMutability === 'view' || abi.stateMutability === 'pure' ? 'call' : 'transact'}</small>\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant={buttonVariant(abi.stateMutability)}\n\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\tclassName=\"mt-0 pt-0 float-right\"\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tif (abi.name) {\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tconst parms: string[] = [];\n\t\t\t\t\t\t\t\t\tabi.inputs?.forEach((item: AbiInput) => {\n\t\t\t\t\t\t\t\t\t\tif (args[item.name]) {\n\t\t\t\t\t\t\t\t\t\t\tparms.push(args[item.name]);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tconst newContract = new celo.kit.web3.eth.Contract(JSON.parse(JSON.stringify([abi])), address);\n\t\t\t\t\t\t\t\t\tcopy(newContract.methods[abi.name](...parms).encodeABI());\n\t\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\t\tconsole.log(e.toString());\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<i className=\"far fa-copy\" />\n\t\t\t\t\t</Button>\n\t\t\t\t</InputGroup.Prepend>\n\t\t\t\t<Form.Control\n\t\t\t\t\tvalue={value}\n\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\treadOnly\n\t\t\t\t\thidden={!(abi.stateMutability === 'view' || abi.stateMutability === 'pure')}\n\t\t\t\t/>\n\t\t\t</InputGroup>\n\t\t</>\n\t);\n};\n\nconst ContractCard: React.FunctionComponent<{\n\tcelo: Celo;\n\tbusy: boolean;\n\tsetBusy: (state: boolean) => void;\n\tblockscout: string;\n\tcontract: InterfaceContract;\n\tindex: number;\n\tremove: () => void;\n\tupdateBalance: (address: string) => void;\n}> = (props) => {\n\tconst [enable, setEnable] = React.useState<boolean>(true);\n\tconst { celo, busy, setBusy, blockscout, contract, index, remove, updateBalance } = props;\n\n\tfunction DrawMathods() {\n\t\tconst list = contract.abi ? contract.abi : [];\n\t\tconst items = list.map((abi: AbiItem, id: number) => (\n\t\t\t<Accordion key={`Methods_A_${index.toString()}`}>\n\t\t\t\t<Card>\n\t\t\t\t\t<Accordion.Toggle as={Card.Header} eventKey={`Methods_${id}`} className=\"p-1\">\n\t\t\t\t\t\t<small>{abi.name}</small>\n\t\t\t\t\t</Accordion.Toggle>\n\t\t\t\t\t<Accordion.Collapse eventKey={`Methods_${id}`}>\n\t\t\t\t\t\t<Card.Body className=\"py-1 px-2\">\n\t\t\t\t\t\t\t<DrawMethod\n\t\t\t\t\t\t\t\tcelo={celo}\n\t\t\t\t\t\t\t\tbusy={busy}\n\t\t\t\t\t\t\t\tsetBusy={setBusy}\n\t\t\t\t\t\t\t\tabi={abi}\n\t\t\t\t\t\t\t\taddress={contract.address}\n\t\t\t\t\t\t\t\tupdateBalance={updateBalance}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t</Accordion.Collapse>\n\t\t\t\t</Card>\n\t\t\t</Accordion>\n\t\t));\n\t\treturn <>{items}</>;\n\t}\n\n\treturn (\n\t\t<CSSTransition in={enable} timeout={300} classNames=\"zoom\" unmountOnExit onExited={remove}>\n\t\t\t<Card className=\"mb-2\">\n\t\t\t\t<Card.Header className=\"px-2 py-1\">\n\t\t\t\t\t<strong className=\"align-middle\">{contract.name}</strong>\n\t\t\t\t\t&nbsp;\n\t\t\t\t\t<small className=\"align-middle\">{`${contract.address.substring(0, 6)}...${contract.address.substring(\n\t\t\t\t\t\t38\n\t\t\t\t\t)}`}</small>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName=\"float-right align-middle\"\n\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\tvariant=\"link\"\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\twindow.open(`${blockscout}/address/${contract.address}`);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<i className=\"fas fa-external-link-alt\" />\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName=\"float-right align-middle\"\n\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\tvariant=\"link\"\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tsetEnable(false);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<i className=\"fas fa-trash-alt\" />\n\t\t\t\t\t</Button>\n\t\t\t\t</Card.Header>\n\t\t\t\t{DrawMathods()}\n\t\t\t</Card>\n\t\t</CSSTransition>\n\t);\n};\n\ninterface InterfaceSmartContractsProps {\n\tcelo: Celo;\n\tbusy: boolean;\n\tsetBusy: (state: boolean) => void;\n\tblockscout: string;\n\tcontracts: InterfaceContract[];\n\tupdateBalance: (address: string) => void;\n}\n\nconst SmartContracts: React.FunctionComponent<InterfaceSmartContractsProps> = (props) => {\n\tconst [error, setError] = React.useState<string>('');\n\tconst [count, setCount] = React.useState<number>(0);\n\tconst { celo, busy, setBusy, blockscout, contracts, updateBalance } = props;\n\n\tReact.useEffect(() => {\n\t\tsetCount(0);\n\t\tsetError(EMPTYLIST);\n\t}, [contracts, busy]);\n\n\tfunction DrawContracts() {\n\t\tconst items = contracts.map((data: InterfaceContract, index: number) => (\n\t\t\t<ContractCard\n\t\t\t\tcelo={celo}\n\t\t\t\tbusy={busy}\n\t\t\t\tsetBusy={setBusy}\n\t\t\t\tblockscout={blockscout}\n\t\t\t\tcontract={data}\n\t\t\t\tindex={index}\n\t\t\t\tremove={() => {\n\t\t\t\t\tsetCount(count + 1);\n\t\t\t\t\tsetError(EMPTYLIST);\n\t\t\t\t}}\n\t\t\t\tupdateBalance={updateBalance}\n\t\t\t\tkey={`Contract_${index.toString()}`}\n\t\t\t/>\n\t\t));\n\t\treturn <>{items}</>;\n\t}\n\n\treturn (\n\t\t<div className=\"SmartContracts\">\n\t\t\t<Alert variant=\"warning\" className=\"text-center\" hidden={contracts.length !== count}>\n\t\t\t\t<small>{error}</small>\n\t\t\t</Alert>\n\t\t\t{DrawContracts()}\n\t\t</div>\n\t);\n};\n\nexport default SmartContracts;\n","import React from 'react';\nimport { Container, Form, InputGroup, Tooltip, Button, OverlayTrigger } from 'react-bootstrap';\nimport { Celo, NETWORKS } from '@dexfair/celo-web-signer';\nimport Compiler from './components/Compiler';\nimport SmartContracts from './components/SmartContracts';\nimport { InterfaceContract } from './components/Types';\n\nconst App: React.FunctionComponent = () => {\n\tconst [account, setAccount] = React.useState<string>('');\n\tconst [balance, setBalance] = React.useState<string>('');\n\tconst [network, setNetwork] = React.useState<string>('Mainnet');\n\tconst [blockscout, setBlockscout] = React.useState<string>('');\n\tconst [busy, setBusy] = React.useState<boolean>(false);\n\tconst [celo] = React.useState<Celo>(new Celo(NETWORKS.Mainnet));\n\tconst [atAddress, setAtAddress] = React.useState<string>('');\n\tconst [contracts, setContracts] = React.useState<InterfaceContract[]>([]);\n\tconst [selected, setSelected] = React.useState<InterfaceContract | null>(null);\n\n\tasync function connect() {\n\t\tif (!celo.isConnected) {\n\t\t\tsetBusy(true);\n\t\t\tsetBlockscout(NETWORKS[network].blockscout || '');\n\t\t\tconst result = await celo.connectMetaMask((type: string, accounts: string[]) => {\n\t\t\t\tsetAccount(accounts[0]);\n\t\t\t\tupdateBalance(accounts[0]);\n\t\t\t});\n\t\t\tif (result && (window as { [key: string]: any }).gtag) {\n\t\t\t\tconst { gtag } = window as { [key: string]: any };\n\t\t\t\tgtag('event', 'login', {\n\t\t\t\t\tmethod: 'MetaMask',\n\t\t\t\t});\n\t\t\t}\n\t\t\tsetBusy(false);\n\t\t}\n\t}\n\n\tasync function updateBalance(address: string) {\n\t\tif (address !== '') {\n\t\t\tconst { CELO } = await celo.kit.getTotalBalance(address);\n\t\t\tsetBalance(celo.kit.web3.utils.fromWei(CELO.toString()));\n\t\t}\n\t}\n\n\tasync function changeNetwork(e: React.ChangeEvent<HTMLInputElement>) {\n\t\tsetBusy(true);\n\t\tsetContracts([]);\n\t\tconst temp = e.target.value;\n\t\tsetNetwork(temp);\n\t\tsetBlockscout(NETWORKS[temp].blockscout || '');\n\t\tawait celo.changeNetwork(NETWORKS[temp]);\n\t\tawait updateBalance(account);\n\t\tsetBusy(false);\n\t}\n\n\tfunction addNewContract(contract: InterfaceContract) {\n\t\tsetContracts(contracts.concat([contract]));\n\t}\n\n\tfunction Networks() {\n\t\tconst list = NETWORKS;\n\t\tconst items = Object.keys(list).map((key) => (\n\t\t\t<option key={key} value={key}>\n\t\t\t\t{key}\n\t\t\t</option>\n\t\t));\n\t\treturn (\n\t\t\t<Form.Group>\n\t\t\t\t<Form.Text className=\"text-muted\">\n\t\t\t\t\t<small>NETWORK</small>\n\t\t\t\t</Form.Text>\n\t\t\t\t<Form.Control as=\"select\" value={network} onChange={changeNetwork} disabled={!celo.isConnected}>\n\t\t\t\t\t{items}\n\t\t\t\t</Form.Control>\n\t\t\t</Form.Group>\n\t\t);\n\t}\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Container>\n\t\t\t\t<Form>\n\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t<Form.Text className=\"text-muted\">\n\t\t\t\t\t\t\t<small>ACCOUNT</small>\n\t\t\t\t\t\t</Form.Text>\n\t\t\t\t\t\t<InputGroup>\n\t\t\t\t\t\t\t<Form.Control type=\"text\" placeholder=\"Account\" value={account} size=\"sm\" readOnly />\n\t\t\t\t\t\t\t<InputGroup.Append hidden={account !== ''}>\n\t\t\t\t\t\t\t\t<OverlayTrigger\n\t\t\t\t\t\t\t\t\tplacement=\"left\"\n\t\t\t\t\t\t\t\t\toverlay={\n\t\t\t\t\t\t\t\t\t\t<Tooltip id=\"overlay-connect\" hidden={account !== ''}>\n\t\t\t\t\t\t\t\t\t\t\tConnect to Wallet\n\t\t\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Button variant=\"warning\" block size=\"sm\" disabled={busy} onClick={connect}>\n\t\t\t\t\t\t\t\t\t\t<small>Connect</small>\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</OverlayTrigger>\n\t\t\t\t\t\t\t</InputGroup.Append>\n\t\t\t\t\t\t</InputGroup>\n\t\t\t\t\t</Form.Group>\n\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t<Form.Text className=\"text-muted\">\n\t\t\t\t\t\t\t<small>BALANCE (CELO)</small>\n\t\t\t\t\t\t</Form.Text>\n\t\t\t\t\t\t<InputGroup>\n\t\t\t\t\t\t\t<Form.Control type=\"text\" placeholder=\"0.0\" value={balance} size=\"sm\" readOnly />\n\t\t\t\t\t\t</InputGroup>\n\t\t\t\t\t</Form.Group>\n\t\t\t\t\t<Networks />\n\t\t\t\t</Form>\n\t\t\t\t<hr />\n\t\t\t\t<Compiler\n\t\t\t\t\tcelo={celo}\n\t\t\t\t\tgtag={(name: string) => {\n\t\t\t\t\t\tconst { gtag } = window as { [key: string]: any };\n\t\t\t\t\t\tgtag('event', name, { network });\n\t\t\t\t\t}}\n\t\t\t\t\tbusy={busy}\n\t\t\t\t\tsetBusy={setBusy}\n\t\t\t\t\taddNewContract={addNewContract}\n\t\t\t\t\tsetSelected={setSelected}\n\t\t\t\t\tupdateBalance={updateBalance}\n\t\t\t\t/>\n\t\t\t\t<p className=\"text-center mt-3\">\n\t\t\t\t\t<small>OR</small>\n\t\t\t\t</p>\n\t\t\t\t<InputGroup className=\"mb-3\">\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\tvalue={atAddress}\n\t\t\t\t\t\tplaceholder=\"contract address\"\n\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\tsetAtAddress(e.target.value);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\tdisabled={busy || account === '' || !selected}\n\t\t\t\t\t/>\n\t\t\t\t\t<InputGroup.Append>\n\t\t\t\t\t\t<OverlayTrigger\n\t\t\t\t\t\t\tplacement=\"left\"\n\t\t\t\t\t\t\toverlay={<Tooltip id=\"overlay-ataddresss\">Use deployed Contract address</Tooltip>}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\t\tdisabled={busy || account === '' || !selected}\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tsetBusy(true);\n\t\t\t\t\t\t\t\t\tif (selected) {\n\t\t\t\t\t\t\t\t\t\taddNewContract({ ...selected, address: atAddress });\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tsetBusy(false);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<small>At Address</small>\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</OverlayTrigger>\n\t\t\t\t\t</InputGroup.Append>\n\t\t\t\t</InputGroup>\n\t\t\t\t<hr />\n\t\t\t\t<SmartContracts\n\t\t\t\t\tcelo={celo}\n\t\t\t\t\tbusy={busy}\n\t\t\t\t\tsetBusy={setBusy}\n\t\t\t\t\tblockscout={blockscout}\n\t\t\t\t\tcontracts={contracts}\n\t\t\t\t\tupdateBalance={updateBalance}\n\t\t\t\t/>\n\t\t\t</Container>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}